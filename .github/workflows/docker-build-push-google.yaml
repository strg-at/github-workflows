---
name: build and push docker image to google

on:
  workflow_call:
    inputs:
      runner:
        description: '["self-hosted", "some-runner"]'
        required: true
        type: string
      workload-identity-provider:
        description: "projects/<number>/locations/global/..."
        required: true
        type: string
      service-account:
        description: "github-artifactregistry@..."
        required: true
        type: string
      registry:
        description: "registry url"
        required: true
        type: string
      gcp:
        description: "google cloud project id"
        required: true
        type: string
      repository:
        description: "registry repo"
        required: true
        type: string
      image:
        description: "image name - default to repo name"
        required: false
        type: string
        default: ${{ github.event.repository.name }}
      tags:
        description: "tags for image - default sha"
        required: false
        type: string
        default: ${{ github.sha }}
      context:
        description: "path to Dockerfile - default ."
        required: false
        type: string
        default: .
      file:
        description: "name of Dockerfile"
        required: false
        type: string
        default: Dockerfile
      generate-token:
        description: "Generates token if its enabled. This token is used in case f.e. docker build needs access to github repos like case with composer."
        required: false
        type: boolean
        default: false

    secrets:
      github-app-id:
        description: "github app id"
        required: false
      github-app-key:
        description: "github app private key"
        required: false

    outputs:
      metadata:
        description: "docker metadata"
        value: ${{ jobs.docker-build-push-google.outputs.metadata }}

jobs:
  docker-build-push-google:
    runs-on: ${{fromJSON(inputs.runner)}}
    permissions:
      contents: read
      id-token: write
    env:
      image-path: ${{ inputs.registry }}/${{ inputs.gcp }}/${{ inputs.repository }}/${{ inputs.image }}
    outputs:
      metadata: ${{ steps.meta.outputs.json }}

    steps:
      # https://github.com/marketplace/actions/checkout
      - name: checkout repository
        uses: actions/checkout@v3.5.0

      # https://github.com/marketplace/actions/cosign-installer
      - name: setup cosign
        uses: sigstore/cosign-installer@v3.0.2

      # Workaround: https://github.com/docker/build-push-action/issues/461
      # https://github.com/marketplace/actions/docker-setup-qemu
      - name: setup QEMU
        uses: docker/setup-qemu-action@v2.1.0

      # https://github.com/marketplace/actions/docker-setup-buildx
      - name: setup docker buildx
        uses: docker/setup-buildx-action@v2.5.0
        with:
          driver: docker

      # https://github.com/marketplace/actions/authenticate-to-google-cloud
      - name: authenticate to google cloud
        id: auth
        uses: "google-github-actions/auth@v1.0.0"
        with:
          token_format: "access_token"
          workload_identity_provider: ${{ inputs.workload-identity-provider }}
          service_account: ${{ inputs.service-account }}

      # https://github.com/marketplace/actions/docker-login
      - name: log into registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ inputs.registry }}
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      # https://github.com/marketplace/actions/docker-metadata-action
      - name: extract metadata for docker
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          images: ${{ env.image-path }}
          tags: ${{ inputs.tags }}

      # https://github.com/marketplace/actions/github-app-token
      - name: generate token
        if: ${{ inputs.generate-token }}
        id: generate-token
        uses: tibdex/github-app-token@v1.8.0
        env:
          # https://github.com/tibdex/github-app-token/issues/54
          # https://stackoverflow.com/questions/72104449/node-js-crypto-fails-to-sign-pem-key-string-from-file-with-error25066067dso-su
          OPENSSL_CONF: /dev/null
        with:
          app_id: ${{ secrets.github-app-id }}
          private_key: ${{ secrets.github-app-key }}

      # https://github.com/marketplace/actions/build-and-push-docker-images
      - name: build and push docker image
        id: build-and-push
        uses: docker/build-push-action@v4.0.0
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.file }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          secrets: |
            "gh-read-token=${{ steps.generate-token.outputs.token }}"

      # https://github.com/sigstore/cosign
      - name: sign the published docker image
        run: cosign sign --yes ${{ env.image-path }}@${{ steps.build-and-push.outputs.digest }}
