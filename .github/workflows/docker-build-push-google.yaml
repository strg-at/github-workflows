---
name: build and push docker image to google

on:
  workflow_call:
    inputs:
      runner:
        description: '["some-runners"]'
        required: true
        type: string
      workload-identity-provider:
        description: "projects/<number>/locations/global/..."
        required: true
        type: string
      service-account:
        description: "github-artifactregistry@..."
        required: true
        type: string
      registry:
        description: "registry url"
        required: true
        type: string
      gcp:
        description: "google cloud project id"
        required: true
        type: string
      repository:
        description: "repository"
        required: true
        type: string
      subpath:
        description: "subpath to image name, f.e. integration/app-name"
        required: true
        type: string
      tags:
        description: "tags for image - default sha"
        required: false
        type: string
        default: ${{ github.sha }}
      platforms:
        description: "define multi-platform images"
        required: false
        type: string
      file:
        description: "path to Dockerfile"
        required: false
        type: string
      context:
        description: "build context - default ."
        required: false
        type: string
        default: .
      generate-token:
        required: false
        type: boolean
        default: false
    secrets:
      github-app-id:
        description: "github app id"
        required: false
      github-app-key:
        description: "github app private key"
        required: false
      docker-username:
        description: "docker username"
        required: false
      docker-token:
        description: "docker token"
        required: false

    outputs:
      metadata:
        description: "docker metadata"
        value: ${{ jobs.docker-build-push-google.outputs.metadata }}

jobs:
  docker-build-push-google:
    name: google
    runs-on: ${{fromJSON(inputs.runner)}}
    permissions:
      contents: read
      packages: read
      id-token: write
    env:
      DOCKER_AUTH: ${{ secrets.docker-username != '' && secrets.docker-token != '' }}
      image-path: ${{ inputs.registry }}/${{ inputs.gcp }}/${{ inputs.repository }}/${{ inputs.subpath }}
    outputs:
      metadata: ${{ steps.meta.outputs.json }}

    steps:
      # https://github.com/marketplace/actions/checkout
      - name: checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      # https://github.com/marketplace/actions/cosign-installer
      - name: setup cosign
        uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62 # v3.10.0

      # https://github.com/marketplace/actions/docker-setup-buildx
      - name: setup docker buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      # https://github.com/marketplace/actions/authenticate-to-google-cloud
      - name: authenticate to google cloud
        id: auth
        uses: google-github-actions/auth@7c6bc770dae815cd3e89ee6cdf493a5fab2cc093 # v3.0.0
        with:
          token_format: "access_token"
          workload_identity_provider: ${{ inputs.workload-identity-provider }}
          service_account: ${{ inputs.service-account }}

      # https://github.com/marketplace/actions/docker-login
      - name: login to google artifact registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ${{ inputs.registry }}
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      # https://github.com/marketplace/actions/docker-login
      - name: login to docker
        if: ${{ env.DOCKER_AUTH == 'true' }}
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          username: ${{ secrets.docker-username }}
          password: ${{ secrets.docker-token }}

      # https://github.com/marketplace/actions/docker-metadata-action
      - name: extract metadata for docker
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: ${{ env.image-path }}
          tags: ${{ inputs.tags }}

      # https://github.com/marketplace/actions/create-github-app-token
      - name: generate token
        if: ${{ inputs.generate-token }}
        id: generate-token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        with:
          app-id: ${{ secrets.github-app-id }}
          private-key: ${{ secrets.github-app-key }}
          owner: ${{ github.repository_owner }}

      # https://github.com/marketplace/actions/build-and-push-docker-images
      - name: build and push docker image
        id: build-and-push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          push: true
          platforms: ${{ inputs.platforms }}
          file: ${{ inputs.file }}
          context: ${{ inputs.context }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
          secrets: |
            "action-token=${{ secrets.GITHUB_TOKEN }}"
            "gh-read-token=${{ steps.generate-token.outputs.token }}"

      # https://github.com/sigstore/cosign
      - name: sign the published docker image
        run: cosign sign --yes ${{ env.image-path }}@${{ steps.build-and-push.outputs.digest }}
