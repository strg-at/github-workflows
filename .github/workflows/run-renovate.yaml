---
name: run renovate

on:
  workflow_call:
    inputs:
      runner:
        description: '["some-runners"]'
        required: true
        type: string
      configuration-file:
        description: "path to config"
        required: false
        type: string
        default: ".github/renovate.json5"
      log-level:
        description: "log-level"
        required: false
        type: string
        default: "debug"
      dry-run:
        description: "dry run"
        required: false
        type: string
        default: "null"
    secrets:
      github-app-id:
        description: "github app id"
        required: true
      github-app-key:
        description: "github app private key"
        required: true
      docker-username:
        description: "docker username"
        required: false
      docker-token:
        description: "docker token"
        required: false

jobs:
  renovate:
    runs-on: ${{fromJSON(inputs.runner)}}
    permissions:
      contents: read
    steps:
      # https://github.com/marketplace/actions/create-github-app-token
      - name: generate token
        id: generate-token
        uses: actions/create-github-app-token@3ff1caaa28b64c9cc276ce0a02e2ff584f3900c5 # v2.0.2
        with:
          app-id: ${{ secrets.github-app-id }}
          private-key: ${{ secrets.github-app-key }}

      # https://github.com/marketplace/actions/checkout
      - name: checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.generate-token.outputs.token }}

      # https://github.com/marketplace/actions/renovate-bot-github-action
      - name: renovate bot
        uses: renovatebot/github-action@e854b273e774bce1ef8cb05f128b8ce8aee2a887 # v42.0.1
        env:
          LOG_LEVEL: ${{ inputs.log-level }}
          RENOVATE_DRY_RUN: ${{ inputs.dry-run }}
          RENOVATE_HOST_RULES: |
            [
              {
                matchHost: "docker.io",
                hostType: "docker",
                username: "${{ secrets.docker-username }}",
                password: "${{ secrets.docker-token }}",
              },
            ]
        with:
          token: ${{ steps.generate-token.outputs.token }}
          configurationFile: ${{ inputs.configuration-file }}
